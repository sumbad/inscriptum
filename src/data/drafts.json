[{"contents":{"ops":[{"insert":"Сборка и упаковка проекта"},{"attributes":{"header":1},"insert":"\n"},{"insert":"Наиболее интересным выглядит NectarJS. Тем более, что обещают производительность, как у нативных приложений. Но есть два опасения для использования:\nпроект находится в alpha версии;"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"вся компиляция происходит на удаленном сервере (SAAS или CAAS - Compiler As A Service). Т.е. мы не можем повлиять на этот процесс и нет 100% гарантии, что код останется приватным."},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Ссылки"},{"attributes":{"header":2},"insert":"\n"},{"attributes":{"link":"https://stackoverflow.com/questions/25564719/deploying-node-js-project-without-npm-on-client-side"},"insert":"Оптимизация размера node_modules"},{"insert":"."},{"attributes":{"list":"ordered"},"insert":"\n"},{"attributes":{"link":"https://hackernoon.com/javascript-compilation-epoch-ebfb7b5bb664"},"insert":"Статья про компиляцию/сборку js приложений"},{"insert":"."},{"attributes":{"list":"ordered"},"insert":"\n"},{"attributes":{"link":"https://github.com/Parellin-Technologies-LLC/basic-fs/wiki/pkg-vs-nexe-vs-nodec"},"insert":"Сравнение pkg vs nexe vs nodec"},{"insert":"."},{"attributes":{"list":"ordered"},"insert":"\n"},{"attributes":{"link":"https://github.com/nexe/nexe"},"insert":"nexe"},{"insert":"."},{"attributes":{"list":"ordered"},"insert":"\n"},{"attributes":{"link":"https://github.com/zeit/pkg"},"insert":"pkg"},{"insert":"."},{"attributes":{"list":"ordered"},"insert":"\n"},{"attributes":{"link":"https://nectarjs.com/"},"insert":"NectarJS - компиляция js в нативный код"},{"insert":"."},{"attributes":{"list":"ordered"},"insert":"\n"}]},"id":"cjqgv9g0k5j930136cc6ew445"},{"contents":{"ops":[{"insert":"Lifehack GraphQL + Apollo"},{"attributes":{"header":1},"insert":"\n"},{"insert":"\nМоки и директивы"},{"attributes":{"header":2},"insert":"\n"},{"insert":"\tЕсли вы используете моки и директивы, то можете заметить, что внутри директивы вызов резолвера пройдет, как будто бы моки не добавлялись. Т.е. вызов field.resolve не вернёт mock резолвер.\nЧтобы это поправить, нужно убрать инициализацию директив через \n  const executableSchema = makeExecutableSchema({"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"    typeDefs: api.types,"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"    resolvers: api.resolver,"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"    // schemaDirectives,"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"    resolverValidationOptions: {"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"      requireResolversForResolveType: false"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"    },"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"  });"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"И заменить на альтернативный метод в коде уже после того, как добавили моки\n...  "},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"addMockFunctionsToSchema({"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"  schema: executableSchema,"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"  mocks: api.mocks,"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"  preserveResolvers: true,"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"});"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"SchemaDirectiveVisitor.visitSchemaDirectives(executableSchema, schemaDirectives);"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"Ссылки"},{"attributes":{"header":2},"insert":"\n"},{"attributes":{"link":"https://www.apollographql.com/docs/graphql-tools/schema-directives.html#Implementing-schema-directives"},"insert":"Альтернативный метод подключения директив"},{"insert":"."},{"attributes":{"list":"ordered"},"insert":"\n"}]},"id":"cjqz0cbno609r0136k6gf5oot"}]