webpackJsonp([22],{291:function(s,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e,d,l=(e=['\n\n  <style>\n    .slide1 {\n      background-color: #2b334f;\n      height: 100%;\n    }\n  \n    .slide2 {\n      background-color: #267481;\n      height: 100%;\n    }\n  \n    .slide3 {\n      background-color: #262f81;\n      height: 100%;\n    }\n  \n    .slide4 {\n      background-color: #fcb052;\n      height: 100%;\n    }\n  \n    .slide5 {\n      background-color: #f06a59;\n      height: 100%;\n    }\n  </style>\n  \n  \n  <um-slides>\n  \n    <um-slide id="slide1" visible>\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">17 февраля 2018 г.</span>\n          <h1 class="text-title">Web components</h1>\n          <h3 class="text-caption">Стандарты разработки компонентов\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide2">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">немного теории</span>\n          <h1 class="text-title">Web components это набор спецификаций W3C</h1>\n          <h3 class="text-caption">Рецепт Web Components прост - это три фундаментальных блока: HTML, CSS и JavaScript.\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n          <div class="text-desc">\n            HTML определяет каркас компонента, является разметкой как и для обычной страницы.\n            <br/> CSS отвечает за визуальное отображение.\n            <br/> JavaScript - это логика компонента, его поведение и функциональность.\n            <br/>\n            <br/> Спецификации Web Components позволяют нам использовать эти три технологии вместе для построения собственных компонентов.\n          </div>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide3">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">область применения</span>\n          <h1 class="text-title">Front-end microservices</h1>\n          <h3 class="text-caption">создание слабосвязанных UI элементов\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n          <div class="text-desc">\n            Возможно создать как монолитное SPA так и отдельный элемент в приложении на одном из фреймворков/библиотек.\n            <br/>\n            <br/> Каждый из компонентов является отдельным элементом со своей функциональностью.\n            <br/>\n            <br/> Набор простых компонентов образует комплексную систему.\n          </div>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide4">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">производительность</span>\n          <h1 class="text-title">Performance или идеальные условия</h1>\n          <h3 class="text-caption">For the initial load, Polymer was 6x faster than Angular\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide5">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">инструменты</span>\n          <h1 class="text-title">Комплексные решения</h1>\n          <h3 class="text-caption">frameworks\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide6">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">инструменты</span>\n          <h1 class="text-title">Render функции</h1>\n          <h3 class="text-caption">дополнительные библиотеки\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n          <div class="text-desc">\n            Упрощение работы, оптимизация создания и обновления компонента. Аналогично VDOM, но проще, меньше и использует встроенные\n            возможности ES 2015.\n            <br/>\n            <br/> Обе библиотеки использую template. Это позволяет снизить накладные расходы и не выходить за пределы спецификаций.\n            <br/>\n            <br/> Высокая скорость и гибкость использования.\n          </div>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide7">\n      <div class="slide slide_100">\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide8">\n      <div class="slide slide_100">\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide9">\n      <div class="slide slide_rows-30-70">\n        <div class="slide__text">\n          <span class="text-note">будущее</span>\n          <h1 class="text-title">Сводка</h1>\n          <h3 class="text-caption">поддержка спецификаций браузерами\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide10">\n      <div class="slide slide_100">\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide11">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">17 февраля 2018 г.</span>\n          <h1 class="text-title">Простое должно быть простым</h1>\n          <h3 class="text-caption">97 этюдов для архитекторов программных систем\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n\n  </um-slides>\n'],d=['\n\n  <style>\n    .slide1 {\n      background-color: #2b334f;\n      height: 100%;\n    }\n  \n    .slide2 {\n      background-color: #267481;\n      height: 100%;\n    }\n  \n    .slide3 {\n      background-color: #262f81;\n      height: 100%;\n    }\n  \n    .slide4 {\n      background-color: #fcb052;\n      height: 100%;\n    }\n  \n    .slide5 {\n      background-color: #f06a59;\n      height: 100%;\n    }\n  </style>\n  \n  \n  <um-slides>\n  \n    <um-slide id="slide1" visible>\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">17 февраля 2018 г.</span>\n          <h1 class="text-title">Web components</h1>\n          <h3 class="text-caption">Стандарты разработки компонентов\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide2">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">немного теории</span>\n          <h1 class="text-title">Web components это набор спецификаций W3C</h1>\n          <h3 class="text-caption">Рецепт Web Components прост - это три фундаментальных блока: HTML, CSS и JavaScript.\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n          <div class="text-desc">\n            HTML определяет каркас компонента, является разметкой как и для обычной страницы.\n            <br/> CSS отвечает за визуальное отображение.\n            <br/> JavaScript - это логика компонента, его поведение и функциональность.\n            <br/>\n            <br/> Спецификации Web Components позволяют нам использовать эти три технологии вместе для построения собственных компонентов.\n          </div>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide3">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">область применения</span>\n          <h1 class="text-title">Front-end microservices</h1>\n          <h3 class="text-caption">создание слабосвязанных UI элементов\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n          <div class="text-desc">\n            Возможно создать как монолитное SPA так и отдельный элемент в приложении на одном из фреймворков/библиотек.\n            <br/>\n            <br/> Каждый из компонентов является отдельным элементом со своей функциональностью.\n            <br/>\n            <br/> Набор простых компонентов образует комплексную систему.\n          </div>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide4">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">производительность</span>\n          <h1 class="text-title">Performance или идеальные условия</h1>\n          <h3 class="text-caption">For the initial load, Polymer was 6x faster than Angular\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide5">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">инструменты</span>\n          <h1 class="text-title">Комплексные решения</h1>\n          <h3 class="text-caption">frameworks\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide6">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">инструменты</span>\n          <h1 class="text-title">Render функции</h1>\n          <h3 class="text-caption">дополнительные библиотеки\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n          <div class="text-desc">\n            Упрощение работы, оптимизация создания и обновления компонента. Аналогично VDOM, но проще, меньше и использует встроенные\n            возможности ES 2015.\n            <br/>\n            <br/> Обе библиотеки использую template. Это позволяет снизить накладные расходы и не выходить за пределы спецификаций.\n            <br/>\n            <br/> Высокая скорость и гибкость использования.\n          </div>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide7">\n      <div class="slide slide_100">\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide8">\n      <div class="slide slide_100">\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide9">\n      <div class="slide slide_rows-30-70">\n        <div class="slide__text">\n          <span class="text-note">будущее</span>\n          <h1 class="text-title">Сводка</h1>\n          <h3 class="text-caption">поддержка спецификаций браузерами\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide10">\n      <div class="slide slide_100">\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n  \n    <um-slide id="slide11">\n      <div class="slide slide_50-50">\n        <div class="slide__text">\n          <span class="text-note">17 февраля 2018 г.</span>\n          <h1 class="text-title">Простое должно быть простым</h1>\n          <h3 class="text-caption">97 этюдов для архитекторов программных систем\n            <img src="slide/imgs/arrow-right.svg" />\n          </h3>\n        </div>\n        <div class="slide__object"></div>\n      </div>\n    </um-slide>\n\n  </um-slides>\n'],Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(d)}})));n.default=function(s,n){return s(l)}}});